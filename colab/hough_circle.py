# -*- coding: utf-8 -*-
"""hough_circle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/186Suz1gL-69QECC1TeOGb2wdlsi3RcW2
"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline
import numpy as np
import cv2
from collections import defaultdict
from math import cos, sin, pi

image = cv2.imread('coins.png')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
height, width = gray.shape
print(height, width)

plt.imshow(gray, cmap='gray')
plt.show()

img_sobel_x = cv2.Sobel(gray, cv2.CV_64F, 1, 0, ksize=3)
img_sobel_x = cv2.convertScaleAbs(img_sobel_x)

img_sobel_y = cv2.Sobel(gray, cv2.CV_64F, 0, 1, ksize=3)
img_sobel_y = cv2.convertScaleAbs(img_sobel_y)


img_sobel = cv2.addWeighted(img_sobel_x, 1, img_sobel_y, 1, 0);

plt.figure(figsize=(14,7))
plt.subplot(131)
plt.imshow(img_sobel_x, cmap='gray')

plt.subplot(132)
plt.imshow(img_sobel_y, cmap='gray')

plt.subplot(133)
plt.imshow(img_sobel, cmap='gray')

plt.show()

threshold, binary_img = cv2.threshold(img_sobel, 245, 255, cv2.THRESH_BINARY)

print(threshold)
plt.imshow(binary_img, cmap='gray')
plt.show()

"""아래 함수를 작성할 시 opencv 라이브러리를 사용하지 말고 모든 내용을 직접 작성하시기 바람"""

def Hough_Circles(img, min_radius, max_radius, threshold):

  array = defaultdict(int)
  for r in range(min_radius, max_radius):
    for i in range(0, img.shape[0]):
      for j in range(0, img.shape[1]):
        if img[i][j] == 255:
          for theta in range(0, 360, 5):
            x = int(i - r * cos(theta * pi / 180))
            y = int(j - r * sin(theta * pi / 180))
            try:
              array[(x, y, r)] += 1
            except IndexError:
              continue
      print(r, i)

  circles = []
  for k in sorted(array, key=lambda i: -i[2]):
    x, y, r = k
    if array[k] >= threshold and x > 0 and y > 0 and all(
            (x - xc) ** 2 + (y - yc) ** 2 > rc ** 2 for xc, yc, rc in circles):
      circles.append((x, y, r))

  return circles

def display_Circles(circles, image):
  print(circles)
  for circle in circles:
    cv2.circle(image, (circle[1], circle[0]), circle[2], (0, 0, 255), 2)

  plt.imshow(image)
  plt.show()


"""주어진 동전을 읽고 결과를 출력하시오"""

circles = Hough_Circles(binary_img, 80, 100, 25)
display_Circles(circles, image)